// <auto-generated />
using System;
using Assignment_of_projects_and_tasks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment_of_projects_and_tasks.Migrations.Project
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20230905054335_ProjectMigration")]
    partial class ProjectMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<int>("statusid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("statusid");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("status");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Completed"
                        },
                        new
                        {
                            id = 2,
                            name = "In progress"
                        },
                        new
                        {
                            id = 3,
                            name = "Incompleted"
                        },
                        new
                        {
                            id = 4,
                            name = "Canceled"
                        },
                        new
                        {
                            id = 5,
                            name = "Delayed"
                        });
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Tasks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("project_id")
                        .HasColumnType("int");

                    b.Property<int>("projectid")
                        .HasColumnType("int");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<int>("statusid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("projectid");

                    b.HasIndex("statusid");

                    b.ToTable("tasks");
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Tasks_user", b =>
                {
                    b.Property<string>("user_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("task_id")
                        .HasColumnType("int");

                    b.HasKey("user_id", "task_id");

                    b.HasIndex("task_id");

                    b.ToTable("tasks_users");
                });


            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Project", b =>
                {
                    b.HasOne("Assignment_of_projects_and_tasks.Models.Status", "status")
                        .WithMany()
                        .HasForeignKey("statusid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("status");
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Tasks", b =>
                {
                    b.HasOne("Assignment_of_projects_and_tasks.Models.Project", "project")
                        .WithMany("Tasks")
                        .HasForeignKey("projectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_of_projects_and_tasks.Models.Status", "status")
                        .WithMany()
                        .HasForeignKey("statusid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");

                    b.Navigation("status");
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Tasks_user", b =>
                {
                    b.HasOne("Assignment_of_projects_and_tasks.Models.Tasks", "tasks")
                        .WithMany("tasks_Users")
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_of_projects_and_tasks.Models.User", "user")
                        .WithMany("tasks_Users")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tasks");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.Tasks", b =>
                {
                    b.Navigation("tasks_Users");
                });

            modelBuilder.Entity("Assignment_of_projects_and_tasks.Models.User", b =>
                {
                    b.Navigation("tasks_Users");
                });
#pragma warning restore 612, 618
        }
    }
}
